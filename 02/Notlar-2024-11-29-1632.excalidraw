{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "iaHqID9vWNagaizwkXtsE",
      "type": "text",
      "x": 219.5796661376953,
      "y": 156.80003509521487,
      "width": 667.7990112304688,
      "height": 135,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a7",
      "roundness": null,
      "seed": 2100889090,
      "version": 509,
      "versionNonce": 1797970090,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1735993085370,
      "link": null,
      "locked": false,
      "text": "1. Sınıf (Class) Nedir?\nSınıf, bir nesne (object) oluşturmak için kullanılan bir taslaktır. \nC++'da sınıflar, verileri ve bu verilere uygulanacak işlemleri bir arada tutar.\nBir sınıfı, hem değişkenleri (attributes) hem de fonksiyonları (methods)\niçeren bir \"şablon\" gibi düşünebilirsiniz.",
      "fontSize": 20,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. Sınıf (Class) Nedir?\nSınıf, bir nesne (object) oluşturmak için kullanılan bir taslaktır. \nC++'da sınıflar, verileri ve bu verilere uygulanacak işlemleri bir arada tutar.\nBir sınıfı, hem değişkenleri (attributes) hem de fonksiyonları (methods)\niçeren bir \"şablon\" gibi düşünebilirsiniz.",
      "autoResize": true,
      "lineHeight": 1.35
    },
    {
      "id": "_bI4wrgsPqiiX_O5tCnBj",
      "type": "text",
      "x": 219.5796661376953,
      "y": 323.8000259399414,
      "width": 812.8389282226562,
      "height": 81,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a8",
      "roundness": null,
      "seed": 642952478,
      "version": 618,
      "versionNonce": 1410064118,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1735993085370,
      "link": null,
      "locked": false,
      "text": "2. Üye (member) Fonksiyonlar ve Üye Değişkenler\nÜye değişkenler: Sınıfın içinde tanımlanan ve sınıfın özelliklerini saklayan değişkenlerdir.\nÜye fonksiyonlar: Sınıfın içinde tanımlanan ve sınıfın işlevselliğini sağlayan fonksiyonlardır.",
      "fontSize": 20,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "2. Üye (member) Fonksiyonlar ve Üye Değişkenler\nÜye değişkenler: Sınıfın içinde tanımlanan ve sınıfın özelliklerini saklayan değişkenlerdir.\nÜye fonksiyonlar: Sınıfın içinde tanımlanan ve sınıfın işlevselliğini sağlayan fonksiyonlardır.",
      "autoResize": true,
      "lineHeight": 1.35
    },
    {
      "id": "BJVUHaJvKZkbrgXjZegCc",
      "type": "text",
      "x": 219.5796661376953,
      "y": 439.0000686645508,
      "width": 901.1187744140625,
      "height": 81,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a9",
      "roundness": null,
      "seed": 1822718686,
      "version": 243,
      "versionNonce": 710816618,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1735993085370,
      "link": null,
      "locked": false,
      "text": "3. Erişim Belirleyiciler (Access Specifiers)\npublic: Bu erişim belirleyiciyle tanımlanan üye değişkenler ve fonksiyonlar sınıfın dışından erişilebilir.\nprivate: Bu erişim belirleyiciyle tanımlanan üyeler sadece sınıfın kendi içinde kullanılabilir.",
      "fontSize": 20,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "3. Erişim Belirleyiciler (Access Specifiers)\npublic: Bu erişim belirleyiciyle tanımlanan üye değişkenler ve fonksiyonlar sınıfın dışından erişilebilir.\nprivate: Bu erişim belirleyiciyle tanımlanan üyeler sadece sınıfın kendi içinde kullanılabilir.",
      "autoResize": true,
      "lineHeight": 1.35
    },
    {
      "id": "-pwDy3div6gRx7NlZHA1y",
      "type": "text",
      "x": 219.5796661376953,
      "y": 539.7999954223633,
      "width": 923.3587646484375,
      "height": 135,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aA",
      "roundness": null,
      "seed": 1696631070,
      "version": 229,
      "versionNonce": 639926134,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1735993064462,
      "link": null,
      "locked": false,
      "text": "Function Overloading ile İlgili Temel Notlar:\nİsim Aynı Olmalı: Aynı isimde birden fazla fonksiyon tanımlanır.\nParametre Türü ve Sayısı Farklı Olmalı: Fonksiyonlar, parametrelerin türü veya sayısına göre ayırt edilir.\nDönüş Türü Overloading İçin Yeterli Değildir: İki fonksiyon sadece dönüş türüyle ayırt edilemez.\nDerleyici, yalnızca parametrelere bakarak hangi fonksiyonun çağrılacağını anlar.",
      "fontSize": 20,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Function Overloading ile İlgili Temel Notlar:\nİsim Aynı Olmalı: Aynı isimde birden fazla fonksiyon tanımlanır.\nParametre Türü ve Sayısı Farklı Olmalı: Fonksiyonlar, parametrelerin türü veya sayısına göre ayırt edilir.\nDönüş Türü Overloading İçin Yeterli Değildir: İki fonksiyon sadece dönüş türüyle ayırt edilemez.\nDerleyici, yalnızca parametrelere bakarak hangi fonksiyonun çağrılacağını anlar.",
      "autoResize": true,
      "lineHeight": 1.35
    },
    {
      "id": "hQ16P9AGuhGxuQRL5wvZG",
      "type": "text",
      "x": 1586.400146484375,
      "y": 134.19996643066406,
      "width": 273.8397216796875,
      "height": 81,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aB",
      "roundness": null,
      "seed": 1039994206,
      "version": 683,
      "versionNonce": 145779382,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1735993089762,
      "link": null,
      "locked": false,
      "text": "Yeni terimler\nshallow copy (yüzeysel kopya)\ndeep copy (derin kopya)",
      "fontSize": 20,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Yeni terimler\nshallow copy (yüzeysel kopya)\ndeep copy (derin kopya)",
      "autoResize": true,
      "lineHeight": 1.35
    },
    {
      "id": "MxMY5ONypmlnqPu2wv79_",
      "type": "text",
      "x": 1586.3999938964844,
      "y": 227.79998779296875,
      "width": 374.3594970703125,
      "height": 135,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aC",
      "roundness": null,
      "seed": 568072862,
      "version": 277,
      "versionNonce": 1744675830,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1735993089762,
      "link": null,
      "locked": false,
      "text": "this: Geçerli nesnenin adresini işaret eder.\n\n*this: Geçerli nesneyi ifade eder.\n\nthis->: Geçerli nesnenin üyelerine erişir.",
      "fontSize": 20,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "this: Geçerli nesnenin adresini işaret eder.\n\n*this: Geçerli nesneyi ifade eder.\n\nthis->: Geçerli nesnenin üyelerine erişir.",
      "autoResize": true,
      "lineHeight": 1.35
    },
    {
      "id": "PyE7QQrR6CK4NIzjSVvgn",
      "type": "text",
      "x": 219.5796661376953,
      "y": 704.9999053955078,
      "width": 1201.71826171875,
      "height": 351,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aD",
      "roundness": null,
      "seed": 1576065642,
      "version": 153,
      "versionNonce": 289099882,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1735993242156,
      "link": null,
      "locked": false,
      "text": "Copy Constructor\n1. Tanım: Copy constructor, aynı sınıftan başka bir nesneyi kullanarak yeni bir nesne oluşturur.\n2. Parametre: Tek bir parametre alır ve bu parametre genellikle sınıfın kendi türünden bir const referanstır.\n3. Amaç: Derin kopyalama (deep copy) işlemleri gerçekleştirmek için kullanılır. Varsayılan kopyalama derin kopyalamayı desteklemez.\n4. Sözdizimi: ClassName(const ClassName &obj);\n5. Kullanım Durumu: Genellikle bir nesnenin oluşturulması sırasında başka bir nesnenin değerleriyle başlatılması gerektiğinde çağrılır.\n\nCopy Assignment Operator\n1. Tanım: Copy assignment operator, mevcut bir nesneye başka bir nesnenin değerlerini atamak için kullanılır.\n2. Parametre: Tek bir parametre alır ve bu parametre genellikle sınıfın kendi türünden bir const referanstır.\n3. Amaç: Nesneler arasında kopyalama işlemlerini yürütmek. Yine derin kopyalama işlemlerini gerçekleştirebilir.\n4. Sözdizimi: ClassName& operator=(const ClassName &obj);\n5. Kullanım Durumu: Bir nesnenin başka bir nesne ile aynı değerleri almasını sağlamak için kullanılır.",
      "fontSize": 20,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Copy Constructor\n1. Tanım: Copy constructor, aynı sınıftan başka bir nesneyi kullanarak yeni bir nesne oluşturur.\n2. Parametre: Tek bir parametre alır ve bu parametre genellikle sınıfın kendi türünden bir const referanstır.\n3. Amaç: Derin kopyalama (deep copy) işlemleri gerçekleştirmek için kullanılır. Varsayılan kopyalama derin kopyalamayı desteklemez.\n4. Sözdizimi: ClassName(const ClassName &obj);\n5. Kullanım Durumu: Genellikle bir nesnenin oluşturulması sırasında başka bir nesnenin değerleriyle başlatılması gerektiğinde çağrılır.\n\nCopy Assignment Operator\n1. Tanım: Copy assignment operator, mevcut bir nesneye başka bir nesnenin değerlerini atamak için kullanılır.\n2. Parametre: Tek bir parametre alır ve bu parametre genellikle sınıfın kendi türünden bir const referanstır.\n3. Amaç: Nesneler arasında kopyalama işlemlerini yürütmek. Yine derin kopyalama işlemlerini gerçekleştirebilir.\n4. Sözdizimi: ClassName& operator=(const ClassName &obj);\n5. Kullanım Durumu: Bir nesnenin başka bir nesne ile aynı değerleri almasını sağlamak için kullanılır.",
      "autoResize": true,
      "lineHeight": 1.35
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}